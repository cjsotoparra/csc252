# proj10_part1.s
#
# Author: Christian Soto
#
# Implements the Project 10 requirements.  It implements a set of functions,
# which are called by the various testcases.

.data
MSG1:  .asciiz ": "
MSG2:  .asciiz " "
.text

.globl printManyStrings
printManyStrings:

                #Funtion prologue
                addiu	$sp, $sp, -24   # allocate stack space -- default of 24 here
	        sw	$ra, 0($sp)     # save caller's frame pointer
	        sw	$fp, 4($sp)     # save return address
	        addiu	$fp, $sp, 20    # setup main's frame pointer

                #intizliaze the array of Strings
                add $t2, $zero, $a0         #t2 = *strings
                                
                #set up loop
                addi $t3, $zero, 0      # i = 0;
LOOP:   
                sll $t5, $t3, 2          #t5  =  i * 2
                add $t4, $t2, $t5        #t4  =  &strings[i]
                lw  $t0, 0($t4)          # t0 = strings[0];
                beq $t0, $zero, AFTER_LOOP       # if (t1 == NULL) branch

                #print ("%d: %s\n", i, strings[i]);
                addi	$v0, $zero, 1	#print i;
	        add	$a0, $t3, $zero
	        syscall

                addi	$v0, $zero, 4  # print_str(MSG1)
	        la	$a0, MSG1
	        syscall

                addi    $v0, $zero, 4  # print_str(strings[i]
                addi    $a0, $t0, 0
                syscall
                
                addi	$v0, $zero, 11 # print_char('\n')
	        addi	$a0, $zero, 0xa
	        syscall

                #increament i;
                addi $t3, $t3, 1         # i++
                                
                j  LOOP
AFTER_LOOP:
                # Function epilogue -- restore stack & frame pointers and return
         	lw	$fp, 4($sp)     # get return address from stack
        	lw	$ra, 0($sp)     # restore the caller's frame pointer
         	addiu	$sp, $sp, 24    # restore the caller's stack pointer
        	jr	$ra             # return to caller's code

.globl swapTwoStrings
swapTwoStrings:
                #Funtion prologue
                addiu   $sp, $sp, -24   # allocate stack space -- default of 24$
                sw      $ra, 0($sp)     # save caller's frame pointer
                sw      $fp, 4($sp)     # save return address
                addiu   $fp, $sp, 20    # setup main's frame pointer
